syntax="proto3";

service CharacterSync {
    rpc UpdateCharacterWorldStates(CharacterWorldStates) returns (UpdateCharacterWorldStateResult) {}

    rpc GetCharacterWorldStates(CharacterWorldStateRequest) returns (CharacterWorldStates) {}

    rpc UpdatePersonalWorldState(CharacterWorldStateUpdate) returns (UpdatePersonalWorldStateResult) {}

    rpc GetPlayerWorldStates(CharacterWorldStateRequest) returns (CharacterWorldStates) {}
}

message CharacterWorldStates {
    string game_id=1;
    repeated CharacterWorldState character_data=2;
    double update_time=3;
}

message CharacterWorldState {
    bool is_player=1;
    string id=2;
    ModelData model_data=3;
    AnimationState animation_state=4;
    Location location=5;
    Orientation orientation=6;
    Trajectory trajectory=7;
    HealthAndStatus health_and_status = 8;
    bool is_visible=9;
}

message ModelData {
    oneof model {
        PlayerAppearanceData player_appearance=1;
        MonsterPrefabData monster_prefab=2;
    }
}

message PlayerAppearanceData {
    int32 fur_type=1;
}

message MonsterPrefabData {
    string prefab_name=1;
}

message AnimationState {
    string state=1;
}

message Location {
    float x=1;
    float y=2;
    float z=3;
}

message Orientation {
    float x=1;
    float y=2;
    float z=3;
    float w=4;
}

message Trajectory {
    float x=1;
    float y=2;
    float z=3;
}

message HealthAndStatus {
    int32 level=1;
    int32 hp=2;
    int32 max_hp=3;
}

message UpdateCharacterWorldStateResult {

}

message CharacterWorldStateRequest {
    string game_id=1;
}

message PersonalWorldStateRequest {
    string game_id=1;
    string character_id=2;
}

message CharacterWorldStateUpdate {
    string game_id=1;
    CharacterWorldState world_state=2;
    double update_time=3;
}

message UpdatePersonalWorldStateResult {

}
